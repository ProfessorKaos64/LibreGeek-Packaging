#!/bin/bash

####################################
# Workarounds for apt
####################################

# We use ffmpeg backported from Ubuntu, as it's configured differently (non-free elements?)
# Use a workaround to remove preferences files to allow packages to request their versions
# during builds only. This is key for packages like ffmpeg and mono (which requests)
# varying package versions...
# This section is subject to change/deletion

if [[ "$NO_APT_PREFS" == "true" ]]; then

	echo "W: APT: Removing /etc/apt/preferences.d/*"

	# Delete
	rm -fv /etc/apt/preferences.d/*

fi

if [[ "$APT_PIN_PRIORITY" == "allow-any" ]]; then

	# Upon removal, it was found pins move to 500
	# This prevents use of older packages if newer ones exist 
	# in repositories. Add a pin level to all allow this
	# This is dangerous and should not be generally used!

	cat <<-EOF > /etc/apt/preferences
	Package: *
	Pin: origin ""
	Pin-Priority: 100

	Package: *
	Pin: release o=* 
	Pin-Priority:100
	EOF

fi

####################################
# apt configurations
####################################

# Purpose of this is to ensure  multi-arch is enabled for any DIST

echo -e "I: APT: Checking for multi-arch support"
sleep 1s

if [[ $(dpkg --print-foreign-architectures | grep -i "i386") == "" ]]; then

	echo -e "I: APT: multi-arch not found"

	# add 32 bit support
	if dpkg --add-architecture i386; then

		echo -e "I: APT: multi-arch [Added]"
		sleep 1s

	else

		echo -e "I: APT: multi-arch addition [FAILED]. Exiting"
		exit 1

	fi

else

	echo -e "I: APT: multi-arch support [OK]"	

fi

####################################
# Regular apt functions
####################################

echo "I: APT: Updating package listings"

if ! apt-get update -y -q &> /dev/null; then

	echo "E: APT: Update operation failed. Exiting"
	exit 1

fi
